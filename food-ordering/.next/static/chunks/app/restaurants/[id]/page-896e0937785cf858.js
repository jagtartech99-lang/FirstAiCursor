(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[141],{3354:function(e,t,n){Promise.resolve().then(n.bind(n,5070))},5070:function(e,t,n){"use strict";n.d(t,{default:function(){return a}});var r=n(7437),i=n(3428);function a(e){let{id:t,name:n,priceCents:a}=e,l=(0,i.j)(e=>e.add);return(0,r.jsx)("button",{onClick:()=>l({id:t,name:n,priceCents:a}),className:"mt-3 rounded-md bg-brand px-3 py-1.5 text-white hover:bg-brand-dark",children:"Add to cart"})}},3428:function(e,t,n){"use strict";let r,i,a;n.d(t,{j:function(){return m}});var l=n(2265);let s=e=>{let t;let n=new Set,r=(e,r)=>{let i="function"==typeof e?e(t):e;if(!Object.is(i,t)){let e=t;t=(null!=r?r:"object"!=typeof i||null===i)?i:Object.assign({},t,i),n.forEach(n=>n(t,e))}},i=()=>t,a={setState:r,getState:i,getInitialState:()=>l,subscribe:e=>(n.add(e),()=>n.delete(e))},l=t=e(r,i,a);return a},o=e=>e?s(e):s,u=e=>e,d=e=>{let t=o(e),n=e=>(function(e,t=u){let n=l.useSyncExternalStore(e.subscribe,l.useCallback(()=>t(e.getState()),[e,t]),l.useCallback(()=>t(e.getInitialState()),[e,t]));return l.useDebugValue(n),n})(t,e);return Object.assign(n,t),n},c=e=>t=>{try{let n=e(t);if(n instanceof Promise)return n;return{then:e=>c(e)(n),catch(e){return this}}}catch(e){return{then(e){return this},catch:t=>c(t)(e)}}},m=(r?d(r):d)((i=(e,t)=>({items:[],add:function(n){let r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;t().items.find(e=>e.id===n.id)?e({items:t().items.map(e=>e.id===n.id?{...e,quantity:e.quantity+r}:e)}):e({items:[...t().items,{...n,quantity:r}]})},remove:n=>e({items:t().items.filter(e=>e.id!==n)}),setQuantity:(n,r)=>e({items:t().items.map(e=>e.id===n?{...e,quantity:r}:e)}),clear:()=>e({items:[]})}),a={name:"foodly-cart"},(e,t,n)=>{let r,l={storage:function(e,t){let n;try{n=e()}catch(e){return}return{getItem:e=>{var t;let r=e=>null===e?null:JSON.parse(e,void 0),i=null!=(t=n.getItem(e))?t:null;return i instanceof Promise?i.then(r):r(i)},setItem:(e,t)=>n.setItem(e,JSON.stringify(t,void 0)),removeItem:e=>n.removeItem(e)}}(()=>localStorage),partialize:e=>e,version:0,merge:(e,t)=>({...t,...e}),...a},s=!1,o=new Set,u=new Set,d=l.storage;if(!d)return i((...t)=>{console.warn(`[zustand persist middleware] Unable to update item '${l.name}', the given storage is currently unavailable.`),e(...t)},t,n);let m=()=>{let e=l.partialize({...t()});return d.setItem(l.name,{state:e,version:l.version})},f=n.setState;n.setState=(e,t)=>{f(e,t),m()};let g=i((...t)=>{e(...t),m()},t,n);n.getInitialState=()=>g;let h=()=>{var n,i;if(!d)return;s=!1,o.forEach(e=>{var n;return e(null!=(n=t())?n:g)});let a=(null==(i=l.onRehydrateStorage)?void 0:i.call(l,null!=(n=t())?n:g))||void 0;return c(d.getItem.bind(d))(l.name).then(e=>{if(e){if("number"!=typeof e.version||e.version===l.version)return[!1,e.state];if(l.migrate){let t=l.migrate(e.state,e.version);return t instanceof Promise?t.then(e=>[!0,e]):[!0,t]}console.error("State loaded from storage couldn't be migrated since no migrate function was provided")}return[!1,void 0]}).then(n=>{var i;let[a,s]=n;if(e(r=l.merge(s,null!=(i=t())?i:g),!0),a)return m()}).then(()=>{null==a||a(r,void 0),r=t(),s=!0,u.forEach(e=>e(r))}).catch(e=>{null==a||a(void 0,e)})};return n.persist={setOptions:e=>{l={...l,...e},e.storage&&(d=e.storage)},clearStorage:()=>{null==d||d.removeItem(l.name)},getOptions:()=>l,rehydrate:()=>h(),hasHydrated:()=>s,onHydrate:e=>(o.add(e),()=>{o.delete(e)}),onFinishHydration:e=>(u.add(e),()=>{u.delete(e)})},l.skipHydration||h(),r||g}))}},function(e){e.O(0,[971,23,744],function(){return e(e.s=3354)}),_N_E=e.O()}]);